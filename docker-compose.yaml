services:
  kv:
    container_name: denorite-kv
    image: ghcr.io/denoland/denokv:latest
    command: --sqlite-path /data/denokv.sqlite serve --access-token ${DENO_KV_ACCESS_TOKEN}
    volumes:
      - kv-data:/data
    restart: always
    expose:
      - 4512
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

  server:
    container_name: denorite-srv
    build: .
    restart: always
    expose:
      - 8082
      - 8081
    environment:
      - DENO_KV_URL=${DENO_KV_URL}
      - DENO_KV_ACCESS_TOKEN=${DENO_KV_ACCESS_TOKEN}
      - DENORITE_ALLOWED_ORIGIN=${DENORITE_ALLOWED_ORIGIN}
      - DENORITE_SERVER_SECRET=${DENORITE_SERVER_SECRET}
      - DENORITE_JWT_SECRET=${DENORITE_JWT_SECRET}
      - RCON_HOST=mc
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - JWT_TOKEN=${JWT_TOKEN}
      - SERVER_URL=${SERVER_URL}
      - MC_SERVER_URL=${MC_SERVER_URL}
      - STRICT_MODE=${STRICT_MODE}
    volumes:
      - modules-data:/app/modules
      - "./minecraft-data:/app/minecraft-data"
    depends_on:
      - kv
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "1.0"
          memory: 1G

  mc:
    container_name: minecraft-server
    image: itzg/minecraft-server
    restart: always
    ports:
      - "${PORT}:25565"
      - "24454:24454/udp"
    environment:
      - EULA=true
      - MODRINTH_PROJECTS=bluemap,fabric-api
      - "VERSION=${MINECRAFT_VERSION:-latest}"
      - "TYPE=${MINECRAFT_TYPE:-FABRIC}"
      - "SERVER_NAME=${MINECRAFT_SERVER_NAME:-Minecraft Server}"
      - "MOTD=${MINECRAFT_MOTD:-Minecraft Server powered by §aCou.sh§r}"
      - "DIFFICULTY=${MINECRAFT_DIFFICULTY:-normal}"
      - "MAX_PLAYERS=${MINECRAFT_MAX_PLAYERS:-10}"
      - "MAX_WORLD_SIZE=${MINECRAFT_MAX_WORLD_SIZE:-10000}"
      - "VIEW_DISTANCE=${MINECRAFT_VIEW_DISTANCE:-10}"
      - "MAX_BUILD_HEIGHT=${MINECRAFT_MAX_BUILD_HEIGHT:-256}"
      - "MAX_TICK_TIME=${MINECRAFT_MAX_TICK_TIME:-60000}"
      - "ALLOW_NETHER=${MINECRAFT_ALLOW_NETHER:-true}"
      - "ANNOUNCE_PLAYER_ACHIEVEMENTS=${MINECRAFT_ANNOUNCE_PLAYER_ACHIEVEMENTS:-true}"
      - "GENERATE_STRUCTURES=${MINECRAFT_GENERATE_STRUCTURES:-true}"
      - "PVP=${MINECRAFT_PVP:-true}"
      - "FORCE_GAMEMODE=${MINECRAFT_FORCE_GAMEMODE:-false}"
      - "HARDCORE=${MINECRAFT_HARDCORE:-false}"
      - "ENABLE_COMMAND_BLOCK=${MINECRAFT_ENABLE_COMMAND_BLOCK:-false}"
      - "SPAWN_ANIMALS=${MINECRAFT_SPAWN_ANIMALS:-true}"
      - "SPAWN_MONSTERS=${MINECRAFT_SPAWN_MONSTERS:-true}"
      - "SPAWN_NPCS=${MINECRAFT_SPAWN_NPCS:-true}"
      - "SNOOPER_ENABLED=${MINECRAFT_SNOOPER_ENABLED:-true}"
      - "ONLINE_MODE=${MINECRAFT_ONLINE_MODE:-true}"
      - "PLAYER_IDLE_TIMEOUT=${MINECRAFT_PLAYER_IDLE_TIMEOUT:-0}"
      - "MEMORY=${MINECRAFT_MEMORY:-1G}"
      - "ENABLE_AUTOPAUSE=${MINECRAFT_ENABLE_AUTOPAUSE:-false}"
      - "RCON_PASSWORD=${SERVICE_PASSWORD_RCON}"
      - "PORT=${PORT:-25565}"
    volumes:
      - "./minecraft-data:/data"
    healthcheck:
      test:
        - CMD
        - /usr/local/bin/mc-monitor
        - status
        - "--host"
        - localhost
      interval: 2s
      timeout: 10s
      retries: 15
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 14G
        reservations:
          cpus: "1.0"
          memory: 6G

  bluemap-web:
    container_name: bluemap-web
    image: nginxinc/nginx-unprivileged:alpine
    restart: always
    ports:
      - "8100:8080"
    volumes:
      - "./minecraft-data/bluemap/web:/usr/share/nginx/html:ro"
    environment:
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
    command: >
      sh -c "echo 'server {
        listen 8080;
        root /usr/share/nginx/html;
        index index.html;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;

        add_header Access-Control-Allow-Origin \"*\" always;
        add_header Access-Control-Allow-Methods \"GET, HEAD, OPTIONS\" always;
        add_header Access-Control-Allow-Headers \"*\" always;

        location / {
            try_files $$uri $$uri/ /index.html;
        }

        location /maps/ {
            gzip_static always;

            location ~* ^/maps/[^/]*/tiles/ {
                error_page 404 = @empty;
            }

            location ~* ^/maps/[^/]*/live/ {
                proxy_pass http://mc:8100;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $$http_upgrade;
                proxy_set_header Connection \"upgrade\";
                proxy_set_header Host $$host;

                error_page 502 504 = @server-offline;
            }
        }

        location @empty {
            return 204;
        }

        location @server-offline {
            try_files $$uri =204;
        }

        if ($$request_method = OPTIONS) {
            return 204;
        }
      }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - mc
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M

volumes:
  kv-data:
  modules-data:
